function M = beam_coefficientmatrix(EI,kGA,kn,ks,l1,l4,lam1,lam2)
%BEAM_COEFFICIENTMATRIX
%    M = BEAM_COEFFICIENTMATRIX(EI,KGA,KN,KS,L1,L4,LAM1,LAM2)

%    This function was generated by the Symbolic Math Toolbox version 8.0.
%    04-Feb-2019 11:05:46

t2 = 1.0./kGA;
t3 = lam1.^2;
t4 = lam2.^2;
t5 = 1.0./kGA.^2;
t6 = EI.*kn.*t5;
t7 = t6-1.0;
t8 = ks.*t2;
t9 = t8+1.0;
t10 = t3-t4;
t11 = t7.*t10;
t12 = t3.^2;
t13 = t4.^2;
t36 = t3.*t4.*6.0;
t14 = t12+t13-t36;
t37 = EI.*t2.*t9.*t14;
t15 = t11-t37;
t16 = lam1.*lam2.*t7.*2.0;
t17 = lam1.*lam2.*t3.*4.0;
t18 = lam1.*t7;
t19 = lam1.*t3;
t20 = lam2.*t7;
t21 = lam2.*t3.*3.0;
t31 = lam2.*t4;
t22 = t21-t31;
t32 = EI.*t2.*t9.*t22;
t23 = lam2+t20-t32;
t24 = l1.*lam1;
t25 = exp(t24);
t26 = l1.*lam2;
t27 = cos(t26);
t28 = exp(-t24);
t29 = sin(t26);
t33 = lam1.*t4.*3.0;
t34 = t19-t33;
t30 = EI.*t2.*t9.*t34;
t35 = -t20+t32;
t41 = lam1.*lam2.*t4.*4.0;
t42 = t17-t41;
t38 = EI.*t2.*t9.*t42;
t39 = -t16+t38;
t40 = -t11+t37;
t43 = lam1.*t25.*t27;
t44 = t43-lam2.*t25.*t29;
t45 = lam2.*t25.*t27;
t46 = lam1.*t25.*t29;
t47 = t45+t46;
t48 = lam1.*t27.*t28;
t49 = lam2.*t28.*t29;
t50 = lam2.*t27.*t28;
t51 = t50-lam1.*t28.*t29;
t52 = l4.*lam1;
t53 = exp(t52);
t54 = l4.*lam2;
t55 = cos(t54);
t56 = sin(t54);
t57 = exp(-t52);
t58 = lam1.*t53.*t55;
t59 = lam2.*t53.*t55;
t60 = lam1.*t53.*t56;
t61 = lam1.*t55.*t57;
t62 = lam2.*t56.*t57;
t63 = lam1.*t56.*t57;
M = reshape([t15,lam1+t18-EI.*t2.*t9.*(t19-lam1.*t4.*3.0),t25.*t27,t7.*t44-EI.*t2.*t9.*(lam1.*t3.*t25.*t27-lam1.*t4.*t25.*t27.*3.0-lam2.*t3.*t25.*t29.*3.0+lam2.*t4.*t25.*t29),-t7.*(-t3.*t25.*t27+t4.*t25.*t27+lam1.*lam2.*t25.*t29.*2.0)-EI.*t2.*t9.*(t12.*t25.*t27+t13.*t25.*t27-t3.*t4.*t25.*t27.*6.0-lam1.*lam2.*t3.*t25.*t29.*4.0+lam1.*lam2.*t4.*t25.*t29.*4.0),t44,0.0,0.0,t16-EI.*t2.*t9.*(t17-lam1.*lam2.*t4.*4.0),t23,t25.*t29,t7.*t47-EI.*t2.*t9.*(lam2.*t3.*t25.*t27.*3.0+lam1.*t3.*t25.*t29-lam2.*t4.*t25.*t27-lam1.*t4.*t25.*t29.*3.0),t7.*(t3.*t25.*t29-t4.*t25.*t29+lam1.*lam2.*t25.*t27.*2.0)-EI.*t2.*t9.*(t12.*t25.*t29+t13.*t25.*t29-t3.*t4.*t25.*t29.*6.0+lam1.*lam2.*t3.*t25.*t27.*4.0-lam1.*lam2.*t4.*t25.*t27.*4.0),t47,0.0,0.0,t15,-lam1-t18+t30,t27.*t28,-t7.*(t48+t49)+EI.*t2.*t9.*(lam1.*t3.*t27.*t28-lam1.*t4.*t27.*t28.*3.0+lam2.*t3.*t28.*t29.*3.0-lam2.*t4.*t28.*t29),t7.*(t3.*t27.*t28-t4.*t27.*t28+lam1.*lam2.*t28.*t29.*2.0)-EI.*t2.*t9.*(t12.*t27.*t28+t13.*t27.*t28-t3.*t4.*t27.*t28.*6.0+lam1.*lam2.*t3.*t28.*t29.*4.0-lam1.*lam2.*t4.*t28.*t29.*4.0),-t48-t49,0.0,0.0,t39,t23,t28.*t29,t7.*t51-EI.*t2.*t9.*(lam2.*t3.*t27.*t28.*3.0-lam1.*t3.*t28.*t29-lam2.*t4.*t27.*t28+lam1.*t4.*t28.*t29.*3.0),-t7.*(-t3.*t28.*t29+t4.*t28.*t29+lam1.*lam2.*t27.*t28.*2.0)-EI.*t2.*t9.*(t12.*t28.*t29+t13.*t28.*t29-t3.*t4.*t28.*t29.*6.0-lam1.*lam2.*t3.*t27.*t28.*4.0+lam1.*lam2.*t4.*t27.*t28.*4.0),t51,0.0,0.0,0.0,0.0,-1.0,-t18+t30,t40,-lam1,-t7.*(-t3.*t53.*t55+t4.*t53.*t55+lam1.*lam2.*t53.*t56.*2.0)-EI.*t2.*t9.*(t12.*t53.*t55+t13.*t53.*t55-t3.*t4.*t53.*t55.*6.0-lam1.*lam2.*t3.*t53.*t56.*4.0+lam1.*lam2.*t4.*t53.*t56.*4.0),t58+t7.*(t58-lam2.*t53.*t56)-lam2.*t53.*t56-EI.*t2.*t9.*(lam1.*t3.*t53.*t55-lam1.*t4.*t53.*t55.*3.0-lam2.*t3.*t53.*t56.*3.0+lam2.*t4.*t53.*t56),0.0,0.0,0.0,t35,t39,-lam2,t7.*(t3.*t53.*t56-t4.*t53.*t56+lam1.*lam2.*t53.*t55.*2.0)-EI.*t2.*t9.*(t12.*t53.*t56+t13.*t53.*t56-t3.*t4.*t53.*t56.*6.0+lam1.*lam2.*t3.*t53.*t55.*4.0-lam1.*lam2.*t4.*t53.*t55.*4.0),t59+t60+t7.*(t59+t60)-EI.*t2.*t9.*(lam1.*t3.*t53.*t56+lam2.*t3.*t53.*t55.*3.0-lam1.*t4.*t53.*t56.*3.0-lam2.*t4.*t53.*t55),0.0,0.0,-1.0,t18-t30,t40,lam1,t7.*(t3.*t55.*t57-t4.*t55.*t57+lam1.*lam2.*t56.*t57.*2.0)-EI.*t2.*t9.*(t12.*t55.*t57+t13.*t55.*t57-t3.*t4.*t55.*t57.*6.0+lam1.*lam2.*t3.*t56.*t57.*4.0-lam1.*lam2.*t4.*t56.*t57.*4.0),-t61-t62-t7.*(t61+t62)+EI.*t2.*t9.*(lam1.*t3.*t55.*t57-lam1.*t4.*t55.*t57.*3.0+lam2.*t3.*t56.*t57.*3.0-lam2.*t4.*t56.*t57),0.0,0.0,0.0,t35,t16-t38,-lam2,-t7.*(-t3.*t56.*t57+t4.*t56.*t57+lam1.*lam2.*t55.*t57.*2.0)-EI.*t2.*t9.*(t12.*t56.*t57+t13.*t56.*t57-t3.*t4.*t56.*t57.*6.0-lam1.*lam2.*t3.*t55.*t57.*4.0+lam1.*lam2.*t4.*t55.*t57.*4.0),-t63-t7.*(t63-lam2.*t55.*t57)+lam2.*t55.*t57+EI.*t2.*t9.*(lam1.*t3.*t56.*t57-lam2.*t3.*t55.*t57.*3.0-lam1.*t4.*t56.*t57.*3.0+lam2.*t4.*t55.*t57)],[8,8]);
